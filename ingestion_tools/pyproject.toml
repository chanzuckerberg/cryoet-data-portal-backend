[project]
name = "ingestion_tools"
version = "0.1.0"
description = "Ingestion tools for the CZI Imaging Institute CryoET Data Portal"
authors = [
    {name = "CZI Imaging Team", email= "cryoetdataportal@chanzuckerberg.com"}
]
license = { text = "MIT" }
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3.11",
]

[build-system]
requires = ["poetry-core==1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ingestion_tools"
version = "0.1.0"
package-mode = false

[project.urls]
homepage = "https://cryoetdataportal.czscience.com/"
repository = "https://github.com/chanzuckerberg/cryoet-data-portal-backend"

[tool.poetry.dependencies]
python = "^3.11"
peewee = "3.16.2"
boto3 = "*"
botocore = "*"
s3fs = {extras = ["boto3"], version = ">=2023.12.0"}
click = "^8.1.7"
psycopg2-binary = "^2.9.9"
mrcfile = "^1.5.0"
zarr = "^2.16.1"
dateparser = "^1.2.0"
starfile = "^0.5.4"
scikit-image = "^0.22.0"
ndjson = "^0.3.1"
ome-zarr = "^0.9.0"
matplotlib = "^3.8.2"
imageio = "^2.33.1"
pytest = "^8.3.2"
boto3-stubs = {extras = ["s3"], version = "^1.34.34"}
mypy = "^1.8.0"
cryoet-data-portal-neuroglancer = { git = "https://github.com/chanzuckerberg/cryoet-data-portal-neuroglancer.git", tag = "v1.3.0" }
distinctipy = "^1.3.4"
imodmodel = "0.0.12"
mdocfile = "^0.1.2"
tifffile = "^2024.8.10"
trimesh = "^4.4.4"
vtk = "^9.3.1"
numpy = "^1.22.0"
pytest-xdist = "^3.6.1"
h5py = "^3.11.0"
allure-pytest = "^2.13.5"
cryoet-alignment = "0.0.7"

[tool.black]
line-length = 120
target_version = ['py311']

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "E", "W",  # pycodestyle
    "F",  # pyflakes
    "B",  # bugbear
    "I",  # isort
    "N",  # pep8-naming
    "ASYNC",  # async
    "COM",  # commas
    "C4",  # comprehensions
    "DTZ",  # datetimez
    "ISC",  # implicit-str-concat
    "G",  # logging-format
    "T20",  # print
    "SIM",  # simplify
]
ignore = [
    "E501",  # line too long
    "C408",  # rewrite empty built-ins as literals
    "T201",  # print statements.
    "DTZ007", # Datetime objects without timezones.
    "DTZ005", # More datetimes without timezones.
]

[tool.ruff.lint.per-file-ignores]
# Ignore `SIM115` (not using open() in a context manager) since all calls to this method *do* use a context manager.
"scripts/common/fs.py" = ["SIM115"]
"**/graphql_api/**" = ["B008", "N815", "B006", "N801", "E721", "SIM118", "B904", "DTZ001", "E722"]
"**/support/enums.py" = ["N801"]

[tool.ruff.lint.isort]
known-first-party =["common"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
warn_unreachable = true
strict = true

[tool.pytest.ini_options]
# Ignore tests in a data_validation folder (asterisk before to glob if in scripts/ or ingestion_tools/ folder)
addopts = "--ignore-glob=*data_validation/"
