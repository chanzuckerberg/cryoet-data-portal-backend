"""
Auto-generated by running `make codegen`. Do not edit!
Make changes to the template platformics/codegen/templates/validators/class_name.py.j2 instead.

Pydantic validator for Frame
"""

# ruff: noqa: E501 Line too long


import uuid

from pydantic import BaseModel, ConfigDict, Field, StringConstraints
from typing_extensions import Annotated


class FrameCreateInputValidator(BaseModel):
    # Pydantic stuff
    model_config = ConfigDict(from_attributes=True)
    deposition_id: Annotated[uuid.UUID, Field()]
    run_id: Annotated[uuid.UUID, Field()]
    acquisition_order: Annotated[int | None, Field()] = None
    accumulated_dose: Annotated[float | None, Field()] = None
    exposure_dose: Annotated[float | None, Field()] = None
    is_gain_corrected: Annotated[bool | None, Field()] = None
    s3_frame_path: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    https_frame_path: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    file_size: Annotated[float | None, Field()] = None
    id: Annotated[int, Field()]


class FrameUpdateInputValidator(BaseModel):
    # Pydantic stuff
    model_config = ConfigDict(from_attributes=True)
    deposition_id: Annotated[uuid.UUID | None, Field()] = None
    run_id: Annotated[uuid.UUID | None, Field()] = None
    acquisition_order: Annotated[int | None, Field()] = None
    accumulated_dose: Annotated[float | None, Field()] = None
    exposure_dose: Annotated[float | None, Field()] = None
    is_gain_corrected: Annotated[bool | None, Field()] = None
    s3_frame_path: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    https_frame_path: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    file_size: Annotated[float | None, Field()] = None
    id: Annotated[int | None, Field()] = None
