"""
Auto-generated by running `make codegen`. Do not edit!
Make changes to the template platformics/codegen/templates/validators/class_name.py.j2 instead.

Pydantic validator for Annotation
"""

# ruff: noqa: E501 Line too long


import datetime
import uuid

from pydantic import BaseModel, ConfigDict, Field, StringConstraints
from support.enums import annotation_method_type_enum
from typing_extensions import Annotated


class AnnotationCreateInputValidator(BaseModel):
    # Pydantic stuff
    model_config = ConfigDict(from_attributes=True)
    run_id: Annotated[uuid.UUID | None, Field()] = None
    deposition_id: Annotated[uuid.UUID | None, Field()] = None
    s3_metadata_path: Annotated[
        str,
        StringConstraints(
            strip_whitespace=True,
        ),
    ]
    https_metadata_path: Annotated[
        str,
        StringConstraints(
            strip_whitespace=True,
        ),
    ]
    annotation_publication: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
            pattern=r"^(EMPIAR-[0-9]{5}|EMD-[0-9]{4,5}|(doi:)?10\.[0-9]{4,9}/[-._;()/:a-zA-Z0-9]+|pdb[0-9a-zA-Z]{4,8})(\s*,\s*(EMPIAR-[0-9]{5}|EMD-[0-9]{4,5}|(doi:)?10\.[0-9]{4,9}/[-._;()/:a-zA-Z0-9]+|pdb[0-9a-zA-Z]{4,8}))*$",
        ),
    ] = None
    annotation_method: Annotated[
        str,
        StringConstraints(
            strip_whitespace=True,
        ),
    ]
    ground_truth_status: Annotated[bool | None, Field()] = None
    object_id: Annotated[
        str,
        StringConstraints(
            strip_whitespace=True,
            pattern=r"^GO:[0-9]{7}$",
        ),
    ]
    object_name: Annotated[
        str,
        StringConstraints(
            strip_whitespace=True,
        ),
    ]
    object_description: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    object_state: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    object_count: Annotated[int | None, Field()] = None
    confidence_precision: Annotated[
        float | None,
        Field(
            ge=0,
            le=100,
        ),
    ] = None
    confidence_recall: Annotated[
        float | None,
        Field(
            ge=0,
            le=100,
        ),
    ] = None
    ground_truth_used: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    annotation_software: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    is_curator_recommended: Annotated[bool | None, Field()] = None
    method_type: Annotated[annotation_method_type_enum, Field()]
    deposition_date: Annotated[datetime.datetime, Field()]
    release_date: Annotated[datetime.datetime, Field()]
    last_modified_date: Annotated[datetime.datetime, Field()]
    id: Annotated[int, Field()]


class AnnotationUpdateInputValidator(BaseModel):
    # Pydantic stuff
    model_config = ConfigDict(from_attributes=True)
    run_id: Annotated[uuid.UUID | None, Field()] = None
    deposition_id: Annotated[uuid.UUID | None, Field()] = None
    s3_metadata_path: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    https_metadata_path: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    annotation_publication: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
            pattern=r"^(EMPIAR-[0-9]{5}|EMD-[0-9]{4,5}|(doi:)?10\.[0-9]{4,9}/[-._;()/:a-zA-Z0-9]+|pdb[0-9a-zA-Z]{4,8})(\s*,\s*(EMPIAR-[0-9]{5}|EMD-[0-9]{4,5}|(doi:)?10\.[0-9]{4,9}/[-._;()/:a-zA-Z0-9]+|pdb[0-9a-zA-Z]{4,8}))*$",
        ),
    ] = None
    annotation_method: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    ground_truth_status: Annotated[bool | None, Field()] = None
    object_id: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
            pattern=r"^GO:[0-9]{7}$",
        ),
    ] = None
    object_name: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    object_description: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    object_state: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    object_count: Annotated[int | None, Field()] = None
    confidence_precision: Annotated[
        float | None,
        Field(
            ge=0,
            le=100,
        ),
    ] = None
    confidence_recall: Annotated[
        float | None,
        Field(
            ge=0,
            le=100,
        ),
    ] = None
    ground_truth_used: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    annotation_software: Annotated[
        str | None,
        StringConstraints(
            strip_whitespace=True,
        ),
    ] = None
    is_curator_recommended: Annotated[bool | None, Field()] = None
    method_type: Annotated[annotation_method_type_enum | None, Field()] = None
    deposition_date: Annotated[datetime.datetime | None, Field()] = None
    release_date: Annotated[datetime.datetime | None, Field()] = None
    last_modified_date: Annotated[datetime.datetime | None, Field()] = None
    id: Annotated[int | None, Field()] = None
