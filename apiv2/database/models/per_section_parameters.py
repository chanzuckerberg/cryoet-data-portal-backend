"""
SQLAlchemy database model for PerSectionParameters

Auto-generated by running 'make codegen'. Do not edit.
Make changes to the template codegen/templates/database/models/class_name.py.j2 instead.
"""

from typing import TYPE_CHECKING

from sqlalchemy import Float, ForeignKey, Integer
from sqlalchemy.orm import Mapped, mapped_column, relationship

from platformics.database.models.base import Base
from platformics.database.models.file import File

if TYPE_CHECKING:
    from database.models.frame import Frame
    from database.models.tiltseries import Tiltseries

    from platformics.database.models.file import File

    ...
else:
    File = "File"
    Frame = "Frame"
    Tiltseries = "Tiltseries"
    ...


class PerSectionParameters(Base):
    __tablename__ = "per_section_parameters"
    __mapper_args__ = {"polymorphic_identity": __tablename__, "polymorphic_load": "inline"}

    frame_id: Mapped[int] = mapped_column(Integer, ForeignKey("frame.id"), nullable=False, index=True)
    frame: Mapped["Frame"] = relationship(
        "Frame",
        foreign_keys=frame_id,
        back_populates="per_section_parameters",
    )
    tiltseries_id: Mapped[int] = mapped_column(Integer, ForeignKey("tiltseries.id"), nullable=False, index=True)
    tiltseries: Mapped["Tiltseries"] = relationship(
        "Tiltseries",
        foreign_keys=tiltseries_id,
        back_populates="per_section_parameters",
    )
    z_index: Mapped[int] = mapped_column(Integer, nullable=False)
    defocus: Mapped[float] = mapped_column(Float, nullable=True)
    astigmatism: Mapped[float] = mapped_column(Float, nullable=True)
    astigmatic_angle: Mapped[float] = mapped_column(Float, nullable=True)
    id: Mapped[int] = mapped_column(Integer, nullable=False, index=True, autoincrement=True, primary_key=True)
